//plugins {
//    id "com.github.johnrengelman.shadow" version "8.1.1"
//}

base {
    archivesName = project.archives_base_name
}

version = "${project.mod_version}-${project.layer_version}+${rootProject.minecraft_base_version}"
group = project.maven_group

architectury {
    platformSetupLoomIde()
    fabric()
}

repositories {
    maven { url = "https://mvn.devos.one/snapshots/" }
    maven { url = 'https://maven.ladysnake.org/releases' }
    maven { url = "https://api.modrinth.com/maven" }
    maven { url = "https://maven.wispforest.io/releases" }
    maven { url = 'https://oss.sonatype.org/content/repositories/snapshots' }
    maven { url = "https://maven.shedaniel.me/" }
    maven { url = "https://maven.terraformersmc.com/" }
}

//evaluationDependsOn(':common')
//evaluationDependsOn(':fabric')

dependencies {
    modImplementation "net.fabricmc:fabric-loader:${rootProject.fabric_loader_version}"
    modApi "net.fabricmc.fabric-api:fabric-api:${rootProject.fabric_api_version}"

    developmentFabric implementation(project(path: ":common", configuration: "namedElements"))
    localRuntime(project(path: ":fabric", configuration: "namedElements"))

    modImplementation annotationProcessor("io.wispforest:owo-lib:${project.owo_version}")

    modLocalRuntime("com.terraformersmc:modmenu:${rootProject.modmenu_version}")

//    modLocalRuntime("maven.modrinth:ok-boomer:0.1.3+1.20.2")
//    modLocalRuntime("io.wispforest:owo-lib:0.12.4-pre.2+1.20.3")
//    modLocalRuntime("io.wispforest:gadget:0.2.3+1.20.3")

    include modImplementation("org.ladysnake.cardinal-components-api:cardinal-components-base:6.1.0")
    include modImplementation("org.ladysnake.cardinal-components-api:cardinal-components-entity:6.1.0")

//    modCompileOnly("maven.modrinth:sophisticated-backpacks-(unoffical-fabric-port):3.19.5+mc1.20.1-build.76")
//    modCompileOnly("maven.modrinth:sophisticated-core-(unofficial-fabric-port):0.5.109+mc1.20.1-build.76")

//    modCompileOnly ("maven.modrinth:things:0.3.3+1.20.3") {
//        exclude group: "dev.emi"
//        exclude group: "com.terraformersmc"
//    }

//    modLocalRuntime("maven.modrinth:things:0.3.3+1.20.3")
//    modLocalRuntime("maven.modrinth:lavender:0.1.2+1.20.3")
}

processResources {
    inputs.property "version", project.mod_version
    inputs.property "layer_version", project.layer_version

    filesMatching("fabric.mod.json") {
        expand "version": project.mod_version,
                "layer_version": project.layer_version
    }
}

loom {
    runs {
        client_mixin {
            client()
            ideConfigGenerated true
            name = "[${project.archivesBaseName}] Client - (Mixin Swap)"
            source sourceSets.main
            vmArg "-Dmixin.debug.export=true"

            try {
                afterEvaluate {
                    def mixinDep = this.configurations.compileClasspath
                            .allDependencies
                            .findAll { it.name == "sponge-mixin" }
                            .first()

                    if (mixin != null) {
                        def mixinPath = this.configurations.compileClasspath.files(mixinDep).first().path;

                        println(mixinPath)

                        vmArg("-javaagent:\"${mixinPath}\"")

                        println("[Info]: Mixin Hotswap Run should be working")
                    } else {
                        println("[Warning]: Unable to locate file path for Mixin Jar, HotSwap Run will not work!!!")
                    }
                }
            } catch (Exception e) {
                println("[Error]: MixinHotswap Run had a issue!")
                e.printStackTrace()
            }
        }
    }
}

publishing {
    publications {
        mavenFabric(MavenPublication) {
            artifactId = "${rootProject.archives_base_name}-${project.name}"
            from components.java
        }
    }
    repositories {}
}